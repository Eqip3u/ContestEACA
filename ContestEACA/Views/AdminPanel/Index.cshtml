@model ContestEACA.Models.ViewModels.AdminIndexViewModel

@{
    ViewData["Title"] = "Index";
    string colortr;
}

<h2>Панель администратора</h2>

<hr />

<form method="get">
    <div class="row">
        <div class="form-inline form-group">

            <label class="control-label">filter: </label>
            @Html.DropDownList("nomination", Model.FilterViewModel.Nominations as SelectList, htmlAttributes: new { @class = "form-control" })

            <input type="submit" value="Filter" class="btn btn-default" />
        </div>
    </div>
</form>
<hr />

<div>
    <a asp-area="" asp-controller="Roles" asp-action="Index">Назначение ролей пользователей</a>  
</div>
<hr />
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HelpNamePost.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HelpNamePost.AuthorId)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.HelpNamePost.Nomination)
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.RatingSort)"
                   asp-route-nomination="@(Model.FilterViewModel.SelectedNomination)">Рейтинг</a>

            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@(Model.SortViewModel.DateSort)"
                   asp-route-nomination="@(Model.FilterViewModel.SelectedNomination)">Дата создания</a>
            </th>

            <th>
                Инструменты
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Posts) {
    if (item.Status == StatusPost.AwaitingForModeration) { colortr = "warning"; }
    else if (item.Status == StatusPost.Accept) { colortr = "success"; }
    else { colortr = "danger"; }
        <tr class="@colortr">
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.FirstName)
                @Html.DisplayFor(modelItem => item.Author.LastName)
                <br />
                @Html.DisplayFor(modelItem => item.Author.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nomination.Name)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
                <a asp-action="SetStatusPost" asp-route-id="@item.ID">Изменить статус</a> |
                <a asp-action="Delete" asp-route-id="@item.ID">Удалить</a>
            </td>
        </tr>
}
    </tbody>
</table>

@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-nomination="@(Model.FilterViewModel.SelectedNomination)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-nomination="@(Model.FilterViewModel.SelectedNomination)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}