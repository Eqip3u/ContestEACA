@using ContestEACA.Views.Manage

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager

@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

    <div class="container ">
     <ul class="nav nav-tabs nav-justified" role="tablist">  
        <li  class=" @ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">Профиль</a></li>
        <li class=" @ManageNavPages.EmailConfirmedNavClass(ViewContext)"><a asp-action="EmailConfirmed">Настройка почты</a></li>
        <li class=" @ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Смена пароля</a></li>

    @if (hasExternalLogins)
    {
        <li class=" @ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins"> Дополнительные аккаунты </a></li>
    }

    @if (UserManager.IsInRoleAsync(UserManager.GetUserAsync(User).Result, "admin").Result)
    {
        <li class="  @ManageNavPages.ModerateWorkNavClass(ViewContext)">
            <a asp-action="ModerateWork">Модерация</a>
        </li>
    }
    </ul> 


